[{"/Users/venkata/Desktop/mylearning/my_login_2/src/index.js":"1","/Users/venkata/Desktop/mylearning/my_login_2/src/App.js":"2","/Users/venkata/Desktop/mylearning/my_login_2/src/store.js":"3","/Users/venkata/Desktop/mylearning/my_login_2/src/Login.js":"4","/Users/venkata/Desktop/mylearning/my_login_2/src/UploadScreen.js":"5","/Users/venkata/Desktop/mylearning/my_login_2/src/Nav.js":"6","/Users/venkata/Desktop/mylearning/my_login_2/src/reducer.js":"7","/Users/venkata/Desktop/mylearning/my_login_2/src/Error.js":"8","/Users/venkata/Desktop/mylearning/my_login_2/src/action.js":"9","/Users/venkata/Desktop/mylearning/my_login_2/src/RegisteredUser.js":"10","/Users/venkata/Desktop/mylearning/my_login_2/src/ethAddressConfig.js":"11"},{"size":472,"mtime":1608924204406,"results":"12","hashOfConfig":"13"},{"size":12148,"mtime":1609168479124,"results":"14","hashOfConfig":"13"},{"size":218,"mtime":1608924204484,"results":"15","hashOfConfig":"13"},{"size":8631,"mtime":1608924204417,"results":"16","hashOfConfig":"13"},{"size":621,"mtime":1608924204501,"results":"17","hashOfConfig":"13"},{"size":2075,"mtime":1609039543177,"results":"18","hashOfConfig":"13"},{"size":529,"mtime":1608924204452,"results":"19","hashOfConfig":"13"},{"size":169,"mtime":1608926564252,"results":"20","hashOfConfig":"13"},{"size":360,"mtime":1608924204313,"results":"21","hashOfConfig":"13"},{"size":3022,"mtime":1608924204468,"results":"22","hashOfConfig":"13"},{"size":361,"mtime":1609127863342,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"uwtxlm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/venkata/Desktop/mylearning/my_login_2/src/index.js",[],["51","52"],"/Users/venkata/Desktop/mylearning/my_login_2/src/App.js",["53","54"],"/Users/venkata/Desktop/mylearning/my_login_2/src/store.js",[],"/Users/venkata/Desktop/mylearning/my_login_2/src/Login.js",["55","56"],"import React, { Component } from \"react\";\n//import MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\n//import TextField from \"material-ui/TextField\";\nimport TextField from \"@material-ui/core/TextField\";\n//import MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\"\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { create_user } from \"./action\";\nimport Error from \"./Error\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\n\nconst customtheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nconst mapDispatchToProps = (data) => {\n  console.log(\"login:mapDispatchToProps\", data);\n  return {\n    user_login: (data) => {\n      create_user(data);\n    },\n  };\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRegister: \"false\",\n      isLoading: \"false\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\",\n    };\n  }\n\n  // componentDidUpdate() {\n  //   this.setState({\n  //     isRegister: \"false\",\n  //   });\n  // }\n\n  handleClick(event) {\n    this.setState({ isLoading: \"true\" });\n    //var apiBaseUrl = remote_backend_url;\n    var apiBaseUrl = \"http://localhost:3000/\";\n    var self = this;\n    var payload = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    if (self.state.isRegister === \"false\") {\n      axios\n        .post(apiBaseUrl + \"api/login\", payload)\n        .then(function (response) {\n          self.setState({ isLoading: \"false\" });\n          console.log(response);\n          if (response.status === 200) {\n            if (\n              response.data &&\n              response.data.msg === \"New user. Please Signup\"\n            ) {\n              console.log(\"New User\");\n              self.setState({\n                errorMessage: \"You are new here. Please Signup\",\n              });\n              self.setState({ isRegister: \"true\" });\n              self.setState({ email: \"\" });\n              self.setState({ password: \"\" });\n            } else if (\n              response.data &&\n              response.data.msg === \"Login Successful\"\n            ) {\n              self.props.user_login(response.data.payload);\n              console.log(response.data.payload.userId);\n              console.log(\"Login successfull\");\n              self.setState({ errorMessage: \"\" });\n              self.props.history.push(\"/upload\");\n            }\n          } else if (response.data.code === 204) {\n            console.log(\"Username password do not match\");\n            alert(\"username password do not match\");\n          } else {\n            self.setState({ errorMessage: \"username does not exist\" });\n            console.log(\"Username does not exists\");\n            alert(\"Username does not exist\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      axios\n        .post(apiBaseUrl + \"api/signup\", payload)\n        .then(function (response) {\n          self.setState({ isLoading: \"false\" });\n          console.log(response);\n          if (response.status === 201) {\n            if (\n              response.data &&\n              response.data.msg === \"User is successfully added\"\n            ) {\n              console.log(\"user added success\");\n              self.props.user_login(response.data.payload);\n              self.props.history.push(\"/upload\");\n            }\n\n            // commenting below for now. Needs revisit\n\n            //   else if (\n            //     response.data &&\n            //     response.data.msg === \"Login Successful\"\n            //   ) {\n            //     self.props.user_login(response.data.payload);\n            //     console.log(response.data.payload.userId);\n            //     console.log(\"Login successfull\");\n            //     self.setState({ errorMessage: \"\" });\n            //     self.props.history.push(\"/upload\");\n            //   }\n            // } else if (response.data.code === 204) {\n            //   console.log(\"Username password do not match\");\n            //   alert(\"username password do not match\");\n            // } else {\n            //   self.setState({ errorMessage: \"username does not exist\" });\n            //   console.log(\"Username does not exists\");\n            //   alert(\"Username does not exist\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n\n  render() {\n    // const {classes, theme} = this.props;\n    if (this.state.isRegister === \"true\") {\n      return (\n        <div>\n          <ThemeProvider theme={customtheme}>\n            <Error data={this.state.errorMessage} />\n            <div>\n              <div>\n                <TextField\n                  placeholder=\"Enter your Username\"\n                  label=\"Username\"\n                  style={muiStyle}\n                  value={this.state.username}\n                  onChange={(event) => {\n                    event.stopPropagation();\n                    this.setState({ username: event.target.value });\n                  }}\n                />\n                <br />\n              </div>\n              <TextField\n                placeholder=\"Enter your Email\"\n                label=\"email\"\n                style={muiStyle}\n                type=\"email\"\n                value={this.state.email}\n                onChange={(event) => {\n                  event.stopPropagation();\n                  this.setState({ email: event.target.value });\n                }}\n              />\n              <br />\n              <TextField\n                type=\"password\"\n                placeholder=\"Enter your Password\"\n                style={muiStyle}\n                label=\"Password\"\n                value={this.state.password}\n                onChange={(event) => {\n                  event.stopPropagation();\n                  this.setState({ password: event.target.value });\n                }}\n              />\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                style={style}\n                onClick={(event) => this.handleClick(event)}\n              >\n                Submit\n              </Button>\n              <br />\n              Already have account? &nbsp;&nbsp;\n              <a href=\"#\" onClick={(event)=> {event.preventDefault(); this.setState({'isRegister': \"false\"})}}>Sign In</a>\n            </div>\n          </ThemeProvider>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <ThemeProvider theme={customtheme}>\n            <Error data={this.state.errorMessage} />\n            <div>\n              <TextField\n                placeholder=\"Enter your Email\"\n                label=\"email\"\n                style={muiStyle}\n                type=\"email\"\n                value={this.state.email}\n                onChange={(event) => {\n                  event.stopPropagation();\n                  this.setState({ email: event.target.value });\n                }}\n              />\n              <br />\n              <TextField\n                type=\"password\"\n                placeholder=\"Enter your Password\"\n                style={muiStyle}\n                label=\"Password\"\n                value={this.state.password}\n                onChange={(event) => {\n                  event.stopPropagation();\n                  this.setState({ password: event.target.value });\n                }}\n              />\n              <br />{\" \"}\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  style={style}\n                  onClick={(event) => this.handleClick(event)}\n                >\n                  Submit\n                </Button>\n                <br />{\" \"}\n              </div>\n              Not a member? &nbsp;&nbsp;\n              <a href=\"#\" onClick={(event)=> {event.preventDefault(); this.setState({'isRegister': \"true\"})}}>Register</a>\n            </div>\n          </ThemeProvider>\n        </div>\n      );\n    }\n  }\n}\nconst style = {\n  margin: 30,\n  backgroundColor: \"green\",\n  minWidth: 120,\n  minHeight: 30,\n  color: \"white\",\n};\nconst muiStyle = {\n  width: 250,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n",["57","58"],"/Users/venkata/Desktop/mylearning/my_login_2/src/UploadScreen.js",[],"/Users/venkata/Desktop/mylearning/my_login_2/src/Nav.js",["59","60"],"import React from \"react\";\nimport RegisteredUser from \"./RegisteredUser\";\nimport Web3 from \"web3\";\nimport { useHistory } from \"react-router-dom\";\n\nlet history;\n\nconst loadWeb3 = async () => {\n  if (window.ethereum) {\n    console.log(\"ethereum is available on window\", window);\n    window.web3 = new Web3(window.ethereum);\n    console.log(\"window.web3 is provided from Web3\", window.web3);\n    try {\n      await window.ethereum.enable();\n      if (history) {\n        console.log(\"login to mandalore\");\n        history.push(\"/login\");\n      }\n    } catch (error) {\n      window.alert(\n        \"MetaMask Login failed. Please retry connecting metamask or re-installing metamask....\"\n      );\n    }\n  } else if (window.web3) {\n    console.log(\"Trying alternate via using window.web3\", window);\n    window.web3 = new Web3(window.web3.currentProvider);\n    console.log(\"web3 is initialized with current provider\");\n  } else {\n    window.alert(\n      \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n    );\n  }\n};\n\nexport default function Nav() {\n  history = useHistory();\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Mandalore\n        </a>\n        <form className=\"form-inline mt-2 mt-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search Avatar\"\n            aria-label=\"Search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <RegisteredUser />\n      </nav>\n    </div>\n  );\n}\n","/Users/venkata/Desktop/mylearning/my_login_2/src/reducer.js",[],"/Users/venkata/Desktop/mylearning/my_login_2/src/Error.js",[],"/Users/venkata/Desktop/mylearning/my_login_2/src/action.js",[],"/Users/venkata/Desktop/mylearning/my_login_2/src/RegisteredUser.js",["61","62"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory,  useLocation } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport {HashLink} from \"react-router-hash-link\";\n\nconst mapStateToProps = (state) => {\n    console.log('mapStateToProps' , state)\n    return {\n      jsonObj: state.jsonObj,\n    };\n  };\n\n\nconst LoginButton = (data) => {\n    console.log(\"LoginButton\" , data.data)\n    \n     if( JSON.stringify(data.data) === '{}') {\n\n\n    return <Button color=\"inherit\" onClick={data.handleLoginClick} >Login</Button>\n    //<HashLink to=\"login\" replace>ABCLOGIN</HashLink>\n    //<Button color=\"inherit\" onClick={data.handleLoginClick} >Login</Button>\n    // <> \n    // <a href=\"/login\">LOGIN</a>\n    // <>\n\n\n\n     }  else {\n     return <>{data.data.name}\n        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\n        <li className=\"nav-item active\">\n          <HashLink className=\"nav-link\" to=\"/\">\n            <i className=\"fa fa-home fa-2x\"></i>\n            <span> Home </span>\n          </HashLink>\n        </li>\n        <li>\n          <div>\n            <a href=\"#\" className=\"nav-item nav-link\">\n              <i className=\"fa fa-bell fa-2x\"></i>\n              <span>Notifications</span>\n            </a>\n          </div>\n        </li>\n\n        <li className=\"nav-item dropdown\">\n          <a\n            className=\"nav-link dropdown-toggle\"\n            href=\"#\"\n            id=\"navbarDropdown\"\n            role=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <img\n              src=\"https://www.tutorialrepublic.com/examples/images/avatar/3.jpg\"\n              className=\"rounded-circle\"\n              alt=\"Avatar\"\n            ></img>\n          </a>\n          <div className=\"dropdown-menu-right dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a className=\"dropdown-item\" href=\"/login\">\n              Profile\n            </a>\n            <a className=\"dropdown-item\" href=\"/login\">\n              CHange Password\n            </a>\n            <div className=\"dropdown-divider\"></div>\n            <a className=\"dropdown-item\" href=\"/login\">\n              Signout\n            </a>\n          </div>\n        </li>\n      </ul></>};\n  }\n\nfunction RegisteredUser(props) {\n    let history = useHistory();\n    let location = useLocation();\n    const {jsonObj} = props;\n\n    function handleLoginClick(e) \n    {\n      if(location.pathname === 'login') {\n\n\n      } else {\n      history.push('/login')\n      }\n    }\n  \n    function handleHomeClick(e) {\n      history.push('/')\n    }\n\n    function render() {\n      console.log(location.pathname);\n      if(location.pathname !== '/login') {\nreturn <LoginButton data = {jsonObj} handleLoginClick={handleLoginClick} />\n      } \n        return <div>\n          <Button onClick={handleHomeClick}>HOME</Button>\n        </div>\n      \n    }\n    \n  return (\n    render()\n  );\n}\n\nexport default connect(mapStateToProps)(RegisteredUser)\n","/Users/venkata/Desktop/mylearning/my_login_2/src/ethAddressConfig.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":611,"column":11,"nodeType":"69","messageId":"70","endLine":611,"endColumn":20},{"ruleId":"67","severity":1,"message":"71","line":641,"column":7,"nodeType":"69","messageId":"70","endLine":641,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":205,"column":15,"nodeType":"74","endLine":205,"endColumn":112},{"ruleId":"72","severity":1,"message":"73","line":253,"column":15,"nodeType":"74","endLine":253,"endColumn":111},{"ruleId":"63","replacedBy":"75"},{"ruleId":"65","replacedBy":"76"},{"ruleId":"67","severity":1,"message":"77","line":8,"column":7,"nodeType":"69","messageId":"70","endLine":8,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":40,"column":9,"nodeType":"74","endLine":40,"endColumn":46},{"ruleId":"72","severity":1,"message":"73","line":41,"column":13,"nodeType":"74","endLine":41,"endColumn":55},{"ruleId":"72","severity":1,"message":"73","line":49,"column":11,"nodeType":"74","endLine":57,"endColumn":12},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'networkId' is assigned a value but never used.","Identifier","unusedVar","'content' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["78"],["79"],"'loadWeb3' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]